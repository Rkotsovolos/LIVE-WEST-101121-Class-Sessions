[{"/Users/lantz/fis/batches/west-se-101121/class-sessions/phase-2/react-hooks-dq-props-state-exercise/src/index.js":"1","/Users/lantz/fis/batches/west-se-101121/class-sessions/phase-2/react-hooks-dq-props-state-exercise/src/components/App.js":"2","/Users/lantz/fis/batches/west-se-101121/class-sessions/phase-2/react-hooks-dq-props-state-exercise/src/components/MasterHog.js":"3","/Users/lantz/fis/batches/west-se-101121/class-sessions/phase-2/react-hooks-dq-props-state-exercise/src/components/BabyHog.js":"4","/Users/lantz/fis/batches/west-se-101121/class-sessions/phase-2/react-hooks-dq-props-state-exercise/src/data.js":"5"},{"size":179,"mtime":1636040727584,"results":"6","hashOfConfig":"7"},{"size":178,"mtime":1636040727582,"results":"8","hashOfConfig":"7"},{"size":1297,"mtime":1636046276973,"results":"9","hashOfConfig":"7"},{"size":2022,"mtime":1636047945354,"results":"10","hashOfConfig":"7"},{"size":271,"mtime":1636040727584,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1kgcloz",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/Users/lantz/fis/batches/west-se-101121/class-sessions/phase-2/react-hooks-dq-props-state-exercise/src/index.js",[],["24","25"],"/Users/lantz/fis/batches/west-se-101121/class-sessions/phase-2/react-hooks-dq-props-state-exercise/src/components/App.js",[],"/Users/lantz/fis/batches/west-se-101121/class-sessions/phase-2/react-hooks-dq-props-state-exercise/src/components/MasterHog.js",[],"/Users/lantz/fis/batches/west-se-101121/class-sessions/phase-2/react-hooks-dq-props-state-exercise/src/components/BabyHog.js",["26","27","28","29","30"],"import React, { useState } from \"react\";\nimport normalBaby from \"../assets/unadulterated-hoglette.png\";\nimport SunBaby from \"../assets/sun-eyes.png\";\nimport BlueBaby from \"../assets/blue-eyes.png\";\nimport GlowingBaby from \"../assets/glowing-eyes.png\";\n\n// is there a way we could associate eye color string values with images?\n// perhaps so we could do something along the lines of `eyeColorMapper['blue'] and get back the right image?`\n\n\n\nfunction BabyHog({name, hobby, eyeColor}) {\n  const [weight, setWeight] = useState(200)\n\n  const eyeColorMapper = {\n    blue: BlueBaby,\n    sun: SunBaby,\n    glowing: GlowingBaby\n  }\n\n  function handleChangeWeight(e) {\n    const newWeight = e.target.name === \"+\" ? weight + 10 : weight - 10\n    // how can we reuse this for both buttons?\n    // perhaps something with e.target.name === \"+\"\n    setWeight(newWeight)\n  }\n\n  function chooseColor(){\n    let babyImg\n    if (eyeColor == \"blue\"){\n      babyImg = BlueBaby\n    } else if (eyeColor == \"sun\") {\n      babyImg = SunBaby\n    } else if (eyeColor == \"glowing\") {\n      babyImg = GlowingBaby\n    }\n    return babyImg\n  }\n\n  // let babyImg;\n  // switch (eyeColor){\n  //   case \"blue\":\n  //     babyImg = BlueBaby\n  //     break\n  //   case \"sun\":\n  //     babyImg = SunBaby\n  //     break\n  //   case \"glowing\":\n  //     babyImg = GlowingBaby\n  //     break\n  //   default:\n  //     babyImg = normalBaby\n  // }\n\n  return (\n    <li className=\"hogbabies\">\n      {/* <h1>{props.name}</h1> */}\n      <h1>{name}</h1>\n      <h3>Weight: {weight}</h3>\n      <h3>Hobby: {hobby} </h3>\n      <h4>Eye Color: {eyeColor}</h4>\n\n      <button name=\"+\" onClick={handleChangeWeight}>Increase Weight</button>\n      <button name=\"-\" onClick={handleChangeWeight}>Decrease Weight</button>\n\n      <div className=\"hb-wrap\">\n        <img\n          src={chooseColor()}\n          // src={eyeColorMapper[eyeColor]}\n          style={{ height: `${weight}px` }}\n          alt=\"MasterBlasterJrJr\"\n        />\n      </div>\n    </li>\n  );\n}\n\nexport default BabyHog;\n","/Users/lantz/fis/batches/west-se-101121/class-sessions/phase-2/react-hooks-dq-props-state-exercise/src/data.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":2,"column":8,"nodeType":"37","messageId":"38","endLine":2,"endColumn":18},{"ruleId":"35","severity":1,"message":"39","line":15,"column":9,"nodeType":"37","messageId":"38","endLine":15,"endColumn":23},{"ruleId":"40","severity":1,"message":"41","line":30,"column":18,"nodeType":"42","messageId":"43","endLine":30,"endColumn":20},{"ruleId":"40","severity":1,"message":"41","line":32,"column":25,"nodeType":"42","messageId":"43","endLine":32,"endColumn":27},{"ruleId":"40","severity":1,"message":"41","line":34,"column":25,"nodeType":"42","messageId":"43","endLine":34,"endColumn":27},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'normalBaby' is defined but never used.","Identifier","unusedVar","'eyeColorMapper' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]